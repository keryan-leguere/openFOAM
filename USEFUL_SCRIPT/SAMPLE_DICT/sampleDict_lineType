/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |				
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Website:  https://openfoam.org
    \\  /    A nd           | Version:  9                                   	
     \\/     M anipulation  |
\*---------------------------------------------------------------------------*/
FoamFile
{
    format      ascii;
    class       dictionary;
    object      sampleDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

// Trick to format the output...thanks chatGPT! 20241017
setFormat scientific;     // Output in scientific notation
setPrecision 8;           // Output precision to 8 digits
setSign on;               // Force leading sign for both positive and negative numbers


type sets;
libs ("libsampling.so");

//interpolationScheme cellPointFace;
//interpolationScheme cellPointWallModified;
interpolationScheme cellPoint;
//interpolationScheme cell;

setFormat       raw;

surlineFaceFormat raw;

// Fields to sample.
fields
(
//    p
    U
//wallShearStress
//U.component(0) 
//vorticity
//wallShearStress
//yPlus // this is NEW comparing to last week, FP 20241024
);

sets
(

    profile_x_1 // profile for x = 1, y from 0 to 1
    {							
		//type	lineCell;
		//type	lineCell;
		//type	lineCellFace;					

		type	lineUniform; // interpolate results on...
		nPoints 1000; // ... 1000 points!
		axis 	xyz; //y;	
	
		start		(	1.0	0	0	);
		end		(	1.0	1.0	0	);	//y 0.0	

		//type	lineUniform;
		//nPoints 100000;

		//type	patchSeed;
		//patches (bottom);
		//maxPoints 200;			
    }							

    profile_x_2 // profile for x = 2, y from 0 to 1
    {							
		//type	lineCell;
		//type	lineCell;
		//type	lineCellFace;					

		type	lineUniform; // interpolate results on...
		nPoints 1000; // ... 1000 points!
		axis 	xyz; //y;	
	
		start		(	2.0	0	0	);
		end		(	2.0	1.0	0	);	//y 0.0	

		//type	lineUniform;
		//nPoints 100000;

		//type	patchSeed;
		//patches (bottom);
		//maxPoints 200;			
    }							

    profile_x_3 // profile for x = 3, y from 0 to 1
    {							
		//type	lineCell;
		//type	lineCell;
		//type	lineCellFace;					

		type	lineUniform; // interpolate results on...
		nPoints 1000; // ... 1000 points!
		axis 	xyz; //y;	
	
		start		(	3.0	0	0	);
		end		(	3.0	1.0	0	);	//y 0.0	

		//type	lineUniform;
		//nPoints 100000;

		//type	patchSeed;
		//patches (bottom);
		//maxPoints 200;			
    }							

    profile_y_0 // profile for y=0, x from -5 to +20
    {							
		//type	lineCell;
		type	lineCellFace;			
		//axis 	xyz; //y;		

		//type	lineUniform;
		//nPoints 1000;
		axis 	xyz;

		start		  (-5.	0	0	);
		end		    (500.	0	0	);			
    }

    profile_x_10_interpolated // profile for x = 10, y from 0 to 1
    {							
		//type	lineCell;

		type	lineUniform; // interpolate results on...
		nPoints 1000; // ... 1000 points!

		axis 	xyz; //y;	

		start		(	100.	0	0	);
		end		(	100.	1.5	0	);	//x 10.0	

    }							

    profile_x_10_cell_center // profile for x = 10, y from 0 to 1
    {							

		type	lineCell; // take values on cell center (NO INTERPOLATION!)

//		type	lineUniform; // interpolate results on...
//		nPoints 1000; // ... 1000 points!

		axis 	xyz; //y;	

		start		(	100.	0	0	);
		end		(	100.	1.5	0	);	//x 10.0	

    }							

    profile_x_10_face_center // profile for x = 10, y from 0 to 1
    {							

		type	lineFace; // take values on face center (NO INTERPOLATION!)

//		type	lineUniform; // interpolate results on...
//		nPoints 1000; // ... 1000 points!

		axis 	xyz; //y;	

		start		(	100.	0	0	);
		end		(	100.	1.5	0	);	//x 10.0	

    }							

    profile_x_10_cell_face_center // profile for x = 10, y from 0 to 1
    {							

		type	lineCellFace; // take values on cell AND face center (NO INTERPOLATION!)

//		type	lineUniform; // interpolate results on...
//		nPoints 1000; // ... 1000 points!

		axis 	xyz; //y;	

		start		(	100.	0	0	);
		end		(	100.	1.5	0	);	//x 10.0	

    }							

);

// *********************************************************************** //
